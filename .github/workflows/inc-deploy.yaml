name: Github Actions singlefile

on:
  push: 
    branches:
      - main

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      fol1: ${{ steps.filter.outputs.fol1 }}
      fol2: ${{ steps.filter.outputs.fol2 }}
      fol3: ${{ steps.filter.outputs.fol3 }}
      nest1: ${{ steps.filter.outputs.nest1 }}
      nest2: ${{ steps.filter.outputs.nest2 }}
    steps:
      - uses: actions/checkout@v3
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            fol1:
              - 'folder1/**'
              - 'shared-lib/**'
            fol2:
              - 'folder2/**'
              - 'shared-lib/**'
            fol3:
              - 'folder3/**'
              - 'shared-lib/**'
            nest1:
              - 'folder1/nest1/**'
              - 'shared-lib/**'
            nest2:
              - 'folder1/nest2/**'
              - 'shared-lib/**'

  build-fol1-nest1:
    needs: detect-changes
    if: needs.detect-changes.outputs.nest1 == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Display files and content in folder1
        run: |
          cd folder1
          echo "This is the list of file at folder1"
          echo "=================================="
          ls -al
          echo ""
          echo "=================================="
          cat text.txt

      - name: Echo commit SHA
        run: |
          echo "Short SHA: $(git rev-parse --short $GITHUB_SHA)"
          echo "Full SHA: $GITHUB_SHA"
          echo "Branch: $GITHUB_REF_NAME"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Run ID: $GITHUB_RUN_ID"
          echo "Run Number: $GITHUB_RUN_NUMBER"

  build-fol1-nest2:
    needs: [detect-changes , build-fol1-nest1]
    if: | 
      needs.detect-changes.outputs.nest2 == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Display files and content in folder2
        run: |
          cd folder2
          echo "This is the content of file at folder2"
          echo "=================================="
          ls -al
          echo ""
          echo "=================================="
          cat text.txt

      - name: Echo commit SHA
        run: |
          echo "Short SHA: $(git rev-parse --short $GITHUB_SHA)"
          echo "Full SHA: $GITHUB_SHA"
          echo "Branch: $GITHUB_REF_NAME"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Run ID: $GITHUB_RUN_ID"
          echo "Run Number: $GITHUB_RUN_NUMBER"

  build-fol1-nest2-only:
    needs: detect-changes
    if: |
      needs.detect-changes.outputs.nest2 == 'true' &&
      needs.detect-changes.outputs.nest1 == 'false'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Display files and content in folder3
        run: |
          cd folder3
          echo "This is the list of file at folder3"
          echo "=================================="
          ls -al
          echo ""
          echo "=================================="
          cat text.txt

      - name: Echo commit SHA
        run: |
          echo "Short SHA: $(git rev-parse --short $GITHUB_SHA)"
          echo "Full SHA: $GITHUB_SHA"
          echo "Branch: $GITHUB_REF_NAME"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Workflow: $GITHUB_WORKFLOW"
          echo "Run ID: $GITHUB_RUN_ID"
          echo "Run Number: $GITHUB_RUN_NUMBER"

  deploy-dev:
    needs: [build-fol1-nest2]
    runs-on: ubuntu-latest
    steps:
      - name: Script to deploy to dev environment
        run: |
          echo "Deploying to dev environment..."
          echo "This is a placeholder for the deployment script."
          echo "You can add your deployment commands here."
          echo "For example, you might use 'kubectl apply -f deployment.yaml' or similar commands."
          echo "Deployment completed successfully!"

  deploy-dev2:
    needs: [build-fol1-nest2-only]
    runs-on: ubuntu-latest
    steps:
      - name: Script to deploy to dev environment
        run: |
          echo "Deploying to dev environment..."
          echo "This is a placeholder for the deployment script."
          echo "You can add your deployment commands here."
          echo "For example, you might use 'kubectl apply -f deployment.yaml' or similar commands."
          echo "Deployment completed successfully!"
